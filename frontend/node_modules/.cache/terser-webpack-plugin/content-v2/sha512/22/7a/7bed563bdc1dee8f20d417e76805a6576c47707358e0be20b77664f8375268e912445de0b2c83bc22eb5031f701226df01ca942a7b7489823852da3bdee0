{"map":"{\"version\":3,\"sources\":[\"/Users/wayne/Desktop/comp9900/capstone-project-whatbot/frontend/src/components/Messages.js\",\"/Users/wayne/Desktop/comp9900/capstone-project-whatbot/frontend/src/components/Input.js\",\"/Users/wayne/Desktop/comp9900/capstone-project-whatbot/frontend/src/App.js\",\"/Users/wayne/Desktop/comp9900/capstone-project-whatbot/frontend/src/serviceWorker.js\",\"/Users/wayne/Desktop/comp9900/capstone-project-whatbot/frontend/src/index.js\"],\"names\":[\"Messages\",\"_this\",\"this\",\"messages\",\"props\",\"react_default\",\"a\",\"createElement\",\"className\",\"map\",\"m\",\"renderMsg\",\"message\",\"member\",\"text\",\"currentMember\",\"id\",\"style\",\"backgroundColor\",\"color\",\"username\",\"Component\",\"Input\",\"state\",\"_this2\",\"onSubmit\",\"e\",\"onChange\",\"value\",\"type\",\"placeholder\",\"autoFocus\",\"setState\",\"target\",\"preventDefault\",\"onSendMessage\",\"App\",\"Math\",\"floor\",\"random\",\"toString\",\"push\",\"components_Messages\",\"components_Input\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"yNAgCeA,mLA7BF,IAAAC,EAAAC,KACEC,EAAYD,KAAKE,MAAjBD,SACP,OACIE,EAAAC,EAAAC,cAAA,KAAA,CAAIC,UAAU,iBACTL,EAASM,IAAI,SAAAC,GAAC,OAAIT,EAAKU,UAAUD,wCAKpCE,GAAS,IACRC,EAAgBD,EAAhBC,OAAQC,EAAQF,EAARE,KACRC,EAAiBb,KAAKE,MAAtBW,cAEDP,EADgBK,EAAOG,KAAOD,EAAcC,GACf,iCAAmC,mBACtE,OACIX,EAAAC,EAAAC,cAAA,KAAA,CAAIC,UAAWA,GACXH,EAAAC,EAAAC,cAAA,OAAA,CAAMC,UAAU,SAChBS,MAAO,CAACC,gBAAiBL,EAAOM,SAChCd,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,YACVK,EAAOO,UAEZf,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,QAAQM,YAvBpBO,EAAAA,WCkCRC,6MAjCXC,MAAQ,CACJT,KAAM,4EAGD,IAAAU,EAAAtB,KACL,OACIG,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,OAAA,CAAMkB,SAAU,SAAAC,GAAC,OAAIF,EAAKC,SAASC,KAC/BrB,EAAAC,EAAAC,cAAA,QAAA,CACIoB,SAAU,SAAAD,GAAC,OAAIF,EAAKG,SAASD,IAC7BE,MAAO1B,KAAKqB,MAAMT,KAClBe,KAAK,OACLC,YAAY,6CACZC,UAAU,SAEd1B,EAAAC,EAAAC,cAAA,SAAA,KAAA,2CAOPmB,GACLxB,KAAK8B,SAAS,CAAClB,KAAMY,EAAEO,OAAOL,yCAGzBF,GACLA,EAAEQ,iBACFhC,KAAK8B,SAAS,CAAClB,KAAM,KACrBZ,KAAKE,MAAM+B,cAAcjC,KAAKqB,MAAMT,aA9BxBO,EAAAA,qBC4CLe,6MApCbb,MAAQ,CACNpB,SAAU,GACVU,OAAQ,CACNO,SAAU,MACVD,MARG,IAAMkB,KAAKC,MAAsB,SAAhBD,KAAKE,UAAqBC,SAAS,QAY3DL,cAAgB,SAACvB,GACf,IAAMT,EAAWF,EAAKsB,MAAMpB,SAC5BA,EAASsC,KAAK,CACZ3B,KAAMF,EACNC,OAAQZ,EAAKsB,MAAMV,SAErBZ,EAAK+B,SAAS,CAAC7B,SAAUA,6EAIzB,OACEE,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,KAAA,KAAA,YAEFF,EAAAC,EAAAC,cAACmC,EAAD,CACEvC,SAAUD,KAAKqB,MAAMpB,SACrBY,cAAeb,KAAKqB,MAAMV,SAE5BR,EAAAC,EAAAC,cAACoC,EAAD,CACER,cAAejC,KAAKiC,gBAEtB9B,EAAAC,EAAAC,cAAA,IAAA,KAAA,qCA/BUc,EAAAA,WCGEuB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,EAAAA,EAASC,OAAO7C,EAAAC,EAAAC,cAAC4C,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC\",\"sourcesContent\":[\"import React, { Component } from 'react';\\n\\nclass Messages extends Component {\\n    render() {\\n        const {messages} = this.props;\\n        return (\\n            <ul className=\\\"Messages-list\\\">\\n                {messages.map(m => this.renderMsg(m))}\\n            </ul>\\n        );\\n    }\\n\\n    renderMsg(message) {\\n        const {member, text} = message;\\n        const {currentMember} = this.props;\\n        const messageFromMe = member.id === currentMember.id;\\n        const className = messageFromMe ?  \\\"Messages-message currentMember\\\" : \\\"Messages-message\\\";\\n        return (\\n            <li className={className}>\\n                <span className=\\\"avatar\\\" \\n                style={{backgroundColor: member.color}}/>\\n                <div className=\\\"Message-content\\\">\\n                    <div className=\\\"username\\\">\\n                        {member.username}\\n                    </div>\\n                    <div className=\\\"text\\\">{text}</div>\\n                </div>\\n            </li>\\n        )\\n    }\\n}\\n\\nexport default Messages;\",\"import React, {Component} from 'react';\\n\\nclass Input extends Component {\\n    state = {\\n        text: \\\"\\\"\\n    }\\n\\n    render() {\\n        return (\\n            <div className=\\\"Input\\\">\\n                <form onSubmit={e => this.onSubmit(e)}>\\n                    <input\\n                        onChange={e => this.onChange(e)}\\n                        value={this.state.text}\\n                        type=\\\"text\\\"\\n                        placeholder=\\\"Enter message here and press ENTER to send\\\"\\n                        autoFocus=\\\"true\\\"\\n                    />\\n                    <button>Send</button>\\n                </form>\\n            </div>\\n        );\\n    }\\n\\n    /* Events */\\n    onChange(e) {\\n        this.setState({text: e.target.value});\\n    }\\n\\n    onSubmit(e) {\\n        e.preventDefault(); // Prevent default so it doesn't refresh\\n        this.setState({text: \\\"\\\"});\\n        this.props.onSendMessage(this.state.text);\\n    }\\n}\\n\\nexport default Input;\",\"import React, { Component } from 'react';\\nimport Messages from './components/Messages';\\nimport Input from './components/Input';\\nimport './App.css';\\n\\nfunction randomColor() {\\n  return '#' + Math.floor(Math.random() * 0xFFFFFF).toString(16);\\n}\\n\\nclass App extends Component {\\n  state = {\\n    messages: [],\\n    member: {\\n      username: \\\"You\\\",\\n      color: randomColor(),\\n    }\\n  }\\n\\n  onSendMessage = (message) => {\\n    const messages = this.state.messages;\\n    messages.push({\\n      text: message,\\n      member: this.state.member\\n    })\\n    this.setState({messages: messages})\\n  }\\n\\n  render() {\\n    return (\\n      <div className=\\\"App\\\">\\n        <div className=\\\"App-header\\\">\\n          <h1>WhatBot</h1>\\n        </div>\\n        <Messages \\n          messages={this.state.messages}\\n          currentMember={this.state.member}\\n        />\\n        <Input\\n          onSendMessage={this.onSendMessage}\\n        />\\n        <p>My token = (window.token)</p>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{14:function(e,t,a){},15:function(e,t,a){},16:function(e,t,a){\"use strict\";a.r(t);var n=a(0),r=a.n(n),s=a(7),o=a.n(s),c=(a(14),a(1)),i=a(2),u=a(4),l=a(3),m=a(5),h=function(e){function t(){return Object(c.a)(this,t),Object(u.a)(this,Object(l.a)(t).apply(this,arguments))}return Object(m.a)(t,e),Object(i.a)(t,[{key:\"render\",value:function(){var e=this,t=this.props.messages;return r.a.createElement(\"ul\",{className:\"Messages-list\"},t.map(function(t){return e.renderMsg(t)}))}},{key:\"renderMsg\",value:function(e){var t=e.member,a=e.text,n=this.props.currentMember,s=t.id===n.id?\"Messages-message currentMember\":\"Messages-message\";return r.a.createElement(\"li\",{className:s},r.a.createElement(\"span\",{className:\"avatar\",style:{backgroundColor:t.color}}),r.a.createElement(\"div\",{className:\"Message-content\"},r.a.createElement(\"div\",{className:\"username\"},t.username),r.a.createElement(\"div\",{className:\"text\"},a)))}}]),t}(n.Component),p=function(e){function t(){var e,a;Object(c.a)(this,t);for(var n=arguments.length,r=new Array(n),s=0;s<n;s++)r[s]=arguments[s];return(a=Object(u.a)(this,(e=Object(l.a)(t)).call.apply(e,[this].concat(r)))).state={text:\"\"},a}return Object(m.a)(t,e),Object(i.a)(t,[{key:\"render\",value:function(){var e=this;return r.a.createElement(\"div\",{className:\"Input\"},r.a.createElement(\"form\",{onSubmit:function(t){return e.onSubmit(t)}},r.a.createElement(\"input\",{onChange:function(t){return e.onChange(t)},value:this.state.text,type:\"text\",placeholder:\"Enter message here and press ENTER to send\",autoFocus:\"true\"}),r.a.createElement(\"button\",null,\"Send\")))}},{key:\"onChange\",value:function(e){this.setState({text:e.target.value})}},{key:\"onSubmit\",value:function(e){e.preventDefault(),this.setState({text:\"\"}),this.props.onSendMessage(this.state.text)}}]),t}(n.Component);a(15);var d=function(e){function t(){var e,a;Object(c.a)(this,t);for(var n=arguments.length,r=new Array(n),s=0;s<n;s++)r[s]=arguments[s];return(a=Object(u.a)(this,(e=Object(l.a)(t)).call.apply(e,[this].concat(r)))).state={messages:[],member:{username:\"You\",color:\"#\"+Math.floor(16777215*Math.random()).toString(16)}},a.onSendMessage=function(e){var t=a.state.messages;t.push({text:e,member:a.state.member}),a.setState({messages:t})},a}return Object(m.a)(t,e),Object(i.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"div\",{className:\"App\"},r.a.createElement(\"div\",{className:\"App-header\"},r.a.createElement(\"h1\",null,\"WhatBot\")),r.a.createElement(h,{messages:this.state.messages,currentMember:this.state.member}),r.a.createElement(p,{onSendMessage:this.onSendMessage}),r.a.createElement(\"p\",null,\"My token = (window.token)\"))}}]),t}(n.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));o.a.render(r.a.createElement(d,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},8:function(e,t,a){e.exports=a(16)}},[[8,1,2]]]);","extractedComments":[]}